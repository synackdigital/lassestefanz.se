
// Center-align a block level element
// ----------------------------------
.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// IE7 inline-block
// ----------------
.ie7-inline-block() {
  *display: inline; /* IE7 inline-block hack */
  *zoom: 1;
}

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
.text-overflow() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// CSS image replacement
// -------------------------
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757
.hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

// Font shortcuts
// -------------------------
.microFont(@line-height: 1) {
  font-size: @microFontFallback; // non-rem fallback
  font-size: @microFont;
  line-height: @line-height * @rhythmUnitFallback;  // non-rem fallback
  line-height: @line-height * @rhythmUnit;
}
.smallFont(@line-height: 2) {
  font-size: @smallFontFallback; // non-rem fallback
  font-size: @smallFont;
  line-height: @line-height * @rhythmUnitFallback;  // non-rem fallback
  line-height: @line-height * @rhythmUnit;
}
.baseFont(@line-height: 2) {
  font-size: 100%; // non-rem fallback
  font-size: 1rem;
  line-height: @line-height * @rhythmUnitFallback;  // non-rem fallback
  line-height: @line-height * @rhythmUnit;
}
.largeFont(@line-height: 3) {
  font-size: @largeFontFallback; // non-rem fallback
  font-size: @largeFont;
  line-height: @line-height * @rhythmUnitFallback;  // non-rem fallback
  line-height: @line-height * @rhythmUnit;
}
.xLargeFont(@line-height: 4) {
  font-size: @xLargeFontFallback; // non-rem fallback
  font-size: @xLargeFont;
  line-height: @line-height * @rhythmUnitFallback;  // non-rem fallback
  line-height: @line-height * @rhythmUnit;
}

// Mute content
// -------------------------
.mute() {
  color: @grayLight;

  a {
    color: @grayLight;
    text-decoration: underline;

    &:hover {
      color: @linkHoverColor;
    }
  }
}

// Shortcut for hiding stuff
// -------------------------
.hide() {
  display: none;
}

// Unstyled lists
// -------------------------
.unstyled-list() {
  list-style: none;
  margin: 0;
  padding: 0;

  // Reset the list stack from here
  ul, ol {
    list-style: disc;
    margin: 0 0 @rhythmUnit 25px;
  }
}

// Invert default colors
// -------------------------
.invertColors() {
  background-color: @textColor;
  color: @backgroundColor;
}

// Box module
// -------------------------
.box(@bgColor: @textColor, @color: @backgroundColor, @padding: @rhythmUnit) {
  background-color: @bgColor;
  color: @color;
  .border-radius(@baseBorderRadius);
  .box-shadow(0 2px 5px rgba(0, 0, 0, .8));

  box-sizing: border-box;
  padding: @padding;
}

// Polaroid image widget
// -------------------------
.polaroid() {
  .box(@padding: 0);

  text-align: center;

  a {
    font-weight: normal;
  }

  img {
    .box-shadow(0 -1px 2px rgba(0, 0, 0, .6));
    .border-top-right-radius(@baseBorderRadius);
    .border-top-left-radius(@baseBorderRadius);
  }

  figcaption {
    margin-top: (.5 * @rhythmUnit);
    margin-bottom: (.5 * @rhythmUnit);

    .largeFont();
  }
}

// Fixes transition flicker on items using CSS transitions
// -------------------------
.fixTransitionFlicker() {
  // http://stackoverflow.com/a/3461770/222245
  // http://stackoverflow.com/questions/3461441/prevent-flicker-on-webkit-transition-of-webkit-transform

  // -webkit-transform:translate3d(0,0,0);
  // -webkit-perspective: 1000; // Appears to add another kind of flicker when hovered
  -webkit-backface-visibility: hidden;
}



// CSS Columns
// -------------------------
.columns(
  @count : 4,
  @gap : (4 * @rhythmUnit)
) {
  -webkit-column-count: @count;
  -moz-column-count: @count;
  -khtml-column-count: @count;
  -ms-column-count: @count;
  -o-column-count: @count;
  column-count: @count;

  -webkit-column-gap: @gap;
  -moz-column-gap: @gap;
  -khtml-column-gap: @gap;
  -ms-column-gap: @gap;
  -o-column-gap: @gap;
  column-gap: @gap;
}
